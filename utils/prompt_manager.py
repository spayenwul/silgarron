from pathlib import Path

# –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
PROMPT_DIR = Path(__file__).parent.parent / "prompts"

def load_and_format_prompt(prompt_name: str, **kwargs) -> str:
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –µ–≥–æ, –ø–æ–¥—Å—Ç–∞–≤–ª—è—è –∑–Ω–∞—á–µ–Ω–∏—è.
    
    :param prompt_name: –ò–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ .txt (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'combat_action')
    :param kwargs: –°–ª–æ–≤–∞—Ä—å —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
    """
    try:
        filepath = PROMPT_DIR / f"{prompt_name}.txt"
        with open(filepath, "r", encoding="utf-8") as f:
            prompt_template = f.read()
        
        return prompt_template.format(**kwargs)
    except FileNotFoundError:
        print(f"üî¥ –û–®–ò–ë–ö–ê: –§–∞–π–ª –ø—Ä–æ–º–ø—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {filepath}")
        return "–û—à–∏–±–∫–∞: –ø—Ä–æ–º–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω."
    except KeyError as e:
        print(f"üî¥ –û–®–ò–ë–ö–ê: –í –ø—Ä–æ–º–ø—Ç–µ '{prompt_name}' –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π: {e}")
        return "–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤ –ø—Ä–æ–º–ø—Ç–µ."
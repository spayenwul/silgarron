import yaml
from pathlib import Path
from services.tag_registry_service import TagRegistry

DATA_DIR = Path(__file__).parent / "generators"
TAG_REGISTRY_FILE = DATA_DIR / "tags_registry.yaml"
WORLD_ANATOMY_FILE = DATA_DIR / "world_anatomy.yaml"
# RACE_DATA_FILE = DATA_DIR / "races.yaml" 

def run_validation():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –∏–≥—Ä–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å.
    –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –º–∏—Ä–∞.
    """
    print("--- –ó–∞–ø—É—Å–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–≥—Ä–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö ---")
    
    # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–µ—Å—Ç—Ä —Ç–µ–≥–æ–≤. –û–Ω - –Ω–∞—à –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã.
    tag_registry = TagRegistry(filepath=TAG_REGISTRY_FILE)
    if not tag_registry._all_tags:
        print("üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –†–µ–µ—Å—Ç—Ä —Ç–µ–≥–æ–≤ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.")
        return

    print(f"‚úÖ –†–µ–µ—Å—Ç—Ä —Ç–µ–≥–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω. –í—Å–µ–≥–æ –ª–µ–≥–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤: {len(tag_registry._all_tags)}")
    
    # 2. –í–∞–ª–∏–¥–∞—Ü–∏—è world_anatomy.yaml
    print("\n--- –ü—Ä–æ–≤–µ—Ä–∫–∞ world_anatomy.yaml ---")
    try:
        with open(WORLD_ANATOMY_FILE, 'r', encoding='utf-8') as f:
            world_data = yaml.safe_load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ 'allowed_region_type_ids' —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–≥–∏
        # (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ —Ç–∏–ø—ã —Ä–µ–≥–∏–æ–Ω–æ–≤ —Ç–æ–∂–µ —è–≤–ª—è—é—Ç—Å—è —Ç–µ–≥–∞–º–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ)
        for continent_id, continent_data in world_data.get("world_continents", {}).items():
            for region_type_id in continent_data.get("allowed_region_type_ids", []):
                if not tag_registry.validate_tag(region_type_id):
                    print(f"  üî¥ –û–®–ò–ë–ö–ê –≤ –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–µ '{continent_id}': "
                          f"–ù–µ–ª–µ–≥–∞–ª—å–Ω—ã–π ID —Ç–∏–ø–∞ —Ä–µ–≥–∏–æ–Ω–∞ '{region_type_id}'. –ï–≥–æ –Ω–µ—Ç –≤ —Ä–µ–µ—Å—Ç—Ä–µ —Ç–µ–≥–æ–≤.")
    except Exception as e:
        print(f"  üî¥ –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª: {e}")

    # 3. –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å–∞–º–∏ (–ø—Ä–∏–º–µ—Ä)
    # print("\n--- –ü—Ä–æ–≤–µ—Ä–∫–∞ races.yaml ---")
    # try:
    #     # ... –∫–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å–∞–º–∏ ...
    #     for race_id, race_data in all_races.items():
    #         # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–≥–∏ —Ä–∞—Å—ã
    #         for tag in race_data.get("tags", []):
    #             if not tag_registry.validate_tag(tag):
    #                 print(f"  üî¥ –û–®–ò–ë–ö–ê –≤ —Ä–∞—Å–µ '{race_id}': –ù–µ–ª–µ–≥–∞–ª—å–Ω—ã–π —Ç–µ–≥ '{tag}'.")
    #         # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–≥–∏ –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    #         for tag in race_data.get("compatibility", {}).get("tags", {}).keys():
    #             if not tag_registry.validate_tag(tag):
    #                 print(f"  üî¥ –û–®–ò–ë–ö–ê –≤ —Ä–∞—Å–µ '{race_id}' (compatibility): –ù–µ–ª–µ–≥–∞–ª—å–Ω—ã–π —Ç–µ–≥ '{tag}'.")
    
    # except Exception as e:
    #     print(f"  üî¥ –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª: {e}")

    print("\n--- –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ---")

if __name__ == "__main__":
    run_validation()